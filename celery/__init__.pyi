from typing import Callable, Any, Optional

class Task:
    def delay(*args:Any, **kwargs:Any): ...
    def retry(*args:Any, **kwargs:Any): ...
    def __call__(self, *args:Any, **kwargs:Any): ...

def shared_task(func:Optional[Callable]=None, bind:bool=False, max_retries:int=0, default_retry_delay:float=0) -> Task: ...


class Celery:
    task: 'Task'
    def __init__(self, name:str): ...
    def config_from_object(self, module:str, namespace:str=''): ...
    def autodiscover_tasks(self): ...

